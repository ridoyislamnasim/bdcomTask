<script>

    //new input box rows and colums
    const newrowcloumn = document.querySelector(".newrowcloumn")

    function removeRoomsCriteriaItem() {
        this.parentElement.remove();
    }
    function closeAllRoomsCriteria() {
        //   this.parentElement.remove();
        // get the parent element to be removed
        const parentElem = document.querySelector('.examDateDiv');

        // loop through each child element and remove it
        while (parentElem.firstChild) {
            parentElem.removeChild(parentElem.firstChild);
        }

        // remove the parent element itself
        // parentElem.remove();
        document.querySelector(".howRowcloumsDiv").style.display = "block";
        document.querySelector(".closeDiv").style.display = "none";
        const newrowcloumn = document.querySelector(".houmanydate")
        newrowcloumn.value = '';
    }

    function oneRoomsCriteriaCol(index) {
        const newExamDateAppend = document.querySelector(".examDateDiv")
        const newdiv = document.createElement("div")
        newdiv.className = "subexamDatepopupDiv"
        //sub div under create input fill
        const examDateInput = document.createElement("input")
        examDateInput.type = "text";
        examDateInput.placeholder = "Enter Designation"
        examDateInput.className = "inputDesignationName"
        examDateInput.name = "designationName"

        const howmanyDuty = document.createElement("input");
        howmanyDuty.type = "number";
        howmanyDuty.placeholder = "How Many Duty ?"
        howmanyDuty.className = "howmanyDuty"
        howmanyDuty.name = "DesignationHowmanyDuty"

        // underLine Div
        const underLineDiv = document.createElement("div")
        underLineDiv.className = "underLineDiv"

        newExamDateAppend.appendChild(newdiv)
        newdiv.appendChild(examDateInput)
        newdiv.appendChild(howmanyDuty)
        newExamDateAppend.appendChild(underLineDiv)

        document.querySelector(".howRowcloumsDiv").style.display = "none";
        document.querySelector(".closeDiv").style.display = "block";

    }

    function createRoomsCriteria() {
        const houmanydate = document.querySelector(".houmanydate")
        console.log("newrowcloumn", houmanydate.value)
        let howManyCol = houmanydate.value
        for (let index = 0; index < howManyCol; index++) {
            console.log(" is ", index)
            oneRoomsCriteriaCol(index)
        }
    }
    //-----------------------------------add slot related work--
    //----------------------------------end-add slot related work--

    // console.log("ridoy", rooms);
    const addRoomsCriteriaModal = document.querySelector("#add-RoomsCriteria-modal");
    const addRoomsCriteriaModalBlar = document.querySelector(".add-roomsCriteria-Modal-Blar");
    // const form = document.querySelector("#add-examdate-form");

    // success toast
    const successToast = Toastify({
        text: "User was added successfully! Reloading the list...",
        duration: 1000,
    });

    function closeRoomsCriteriaModal() {
        addRoomsCriteriaModal.style.display = "none";
        addRoomsCriteriaModalBlar.style.display = "none";
    }
    function openRoomsCriteriaModal() {
        addRoomsCriteriaModal.style.display = "block";
        addRoomsCriteriaModalBlar.style.display = "block";

    }

    // form.onsubmit = async function (event) {
    //     event.preventDefault();
    //     // clear errors first---------------------------->>
    //     const errorPlaceholders = document.querySelectorAll("p.error");
    //     console.log("errorPlaceholders");
    //     console.log(errorPlaceholders);

    //     for (let i = 0; i < errorPlaceholders.length; i++) {
    //         errorPlaceholders[i].style.display = "none";
    //     }

    //     const inputErrors = document.querySelectorAll("input.error");
    //     console.log("inputErrors");
    //     console.log(inputErrors);

    //     if (inputErrors.length > 0) {
    //         for (let j = 0; j < inputErrors.length; j++) {
    //             inputErrors[j].classList.remove("error");
    //         }
    //     }
    //     // // ------------------------------------------>>

    //     const formData = new FormData(form);
    //     console.log("formData");
    //     console.log(formData);
    //     // send the request to server
    //     let response = await fetch("/Administrator/examdate", {
    //         method: "post",
    //         body: formData,
    //     });
    //     let result = await response.json();
    //     console.log("result", result);
    //     // handle error and response
    //     if (result.errors) {
    //         // errors
    //         console.log("working go");
    //         // console.log(fieldName)

    //         Object.keys(result.errors).forEach((fieldName) => {
    //             // add error class to all inputs
    //             form[fieldName].classList.add("error");

    //             // set all error placeholders (p tag) textContent
    //             const errorPlaceholder = document.querySelector(
    //                 `.${fieldName}-error`
    //             );
    //             console.log("errorPlaceholderDown");
    //             console.log(errorPlaceholder);
    //             console.log("fieldName");
    //             console.log(fieldName);

    //             errorPlaceholder.innerHTML =
    //                 result.errors[fieldName].msg;

    //             // make all placeholders visible
    //             errorPlaceholder.style.display = "block";
    //         });
    //     } else {
    //         // success
    //         successToast.showToast();
    //         console.log("close");
    //         // successToast.showToast();
    //         closeInvigilatorCriteriaModal();
    //         document.querySelector("p.error").style.display = "none";

    //         // reload the page after 1 second
    //         setTimeout(() => {
    //             location.reload();
    //         }, 100);
    //     }
    // };


</script>