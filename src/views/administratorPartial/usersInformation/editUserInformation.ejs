<div class="modal-wrapper" id="edit-user-modal">
    <div class="modal">
      <a href="#" onclick="closeUserInfoEditModal()" class="modal-close">+</a>
      <div class="modal-title">
        <h2>Edit User Designation</h2>
      </div>
      <div class="modal-body">
        <form id="edit-userinfo-form">
          <div class="radio">
            <span>User Designation:</span> 
            <div>
              <select>
                <option id="AdministratorSet" value="Administrator">Administrator</option>
                <option id="ViewerSet" value="Viewer">Viewer</option>
                <option id="TeacherSet" value="Teacher" >Teacher</option>
                <option id="InvigilatorSet" value="Invigilator">Invigilator</option>
              </select>
          </div>               
          </div>
          <p id="edituserInfoId" style="display: none;">p</p>
          <input type="submit" value="Submit" />
        </form>
      </div>
    </div>
  </div>
</div>


<script> 
  // select the edit Model and Form
  const editUserInfoModal = document.querySelector("#edit-user-modal");
  const editUserinfoForm = document.querySelector("#edit-userinfo-form");
  // cuccess toast
  const editSuccessToast = Toastify({
            text: "User was Edit successfully!",
            duration: 5000,
        });
  const editFailToast = Toastify({
            text: "User was Edit Fail!",
            duration: 5000,
        });
  //  colse the model
  function closeUserInfoEditModal() {
    editUserInfoModal.style.display = "none";
  }
  // open the model 
   const prvAdministratorSet=document.querySelector("#AdministratorSet")
   const prvViewerSet= document.querySelector("#ViewerSet")
   const prvTeacherSet =document.querySelector("#TeacherSet")
   const prvInvigilatorSet =document.querySelector("#InvigilatorSet")

   const edituserInfoIdSet =document.querySelector("#edituserInfoId")
  async function openUserInfoEditModal  ( prvUserDesignation,editUserId) {
    edituserInfoIdSet.innerHTML = editUserId;
    if(prvUserDesignation == "Administrator"){
      prvAdministratorSet.selected ="selected"
    }else if(prvUserDesignation=="Viewer" ){
      prvViewerSet.selected ="selected"
    }else if(prvUserDesignation=="Teacher" ){
      prvTeacherSet.selected ="selected"
    }else{
      prvInvigilatorSet.selected ="selected"
    }
    editUserInfoModal.style.display = "block";
  }



  // -----------------------------edit and submit____________________________________>>
  editUserinfoForm.onsubmit =async function(event){
      event.preventDefault();
     console.log("Send start")

   // clear errors first---------------------------->>
      // const errorPlaceholders = document.querySelectorAll("p.error");
      // for (let i = 0; i < errorPlaceholders.length; i++) {
      //   errorPlaceholders[i].style.display = "none";
      // }
   // clear the red border clear---------->>
      // const inputErrors = document.querySelectorAll("input.error");
      // if (inputErrors.length > 0) {
      //   for (let j = 0; j < inputErrors.length; j++) {
      //     inputErrors[j].classList.remove("error");
      //   }
      // }
// // ------------------------------------------>>
     const edituserInfo_Id=  document.querySelector("#edituserInfoId").innerHTML;  
    // face the data
     const formData = new FormData(editUserinfoForm); 
     console.log(edituserInfo_Id)
     console.log(formData)
      let response = await fetch(`/Administrator/userInformation/${edituserInfo_Id}`, {
      method: "post",
      body: formData,
      });
     let result =await response.json()
    console.log(result)
    // handle error and response
    if (result.errors) {
      console.log("fail")
      editFailToast.showToast()
    // Object.keys(result.errors).forEach((fieldName) => {
    //   // set the error red border
    //   editTeacherForm[fieldName].classList.add("error");
    //   // set the error msg
    //   const errorPlaceholder = document.querySelector(`.${fieldName}-edit-error`);
    //   errorPlaceholder.innerHTML = result.errors[fieldName].msg;
    //   // set the error msg than sow the msg visible(make all placeholders visible)
    //   errorPlaceholder.style.display = "block";
    // });
  } else {
    // success tost show
    editSuccessToast.showToast();
    // colse the model
    closeUserInfoEditModal();
    // clear validtaon error hide
    document.querySelector("p.error").style.display = "none";
    // reload the page after 1 second
    setTimeout(() => {
      location.reload();
    }, 100);
  }}
</script>
