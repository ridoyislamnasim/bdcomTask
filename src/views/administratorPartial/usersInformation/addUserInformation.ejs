  
      <div class="modal-wrapper" id="add-userInformation-modal">
        <div class="modal">
          <a href="#" onclick="closeAddUserInformationModal()" class="modal-close">+</a>
          <div class="modal-title">
            <h2>Add slot Time</h2>
          </div>
          <div class="modal-body">
            <form id="add-room-form"
            action="/Administrator/timeslots"
            method="post">
              <h4><span> Exam  Slot name </span></h4>
                <input type="text" placeholder="Enter Slot name " name="username" />
                <h4><span>Exam Start Time</span></h4>
                <input type="time" placeholder="Enter Start Time" name="useremail" />
                <h4><span>Exam Brack Name </span></h4>
                <input type="text" placeholder="Enter Brack Name" name="bracktime" />               
              </div>
              <input type="submit" value="Submit" />
            </form>
          </div>
        </div>
      </div>

      <script>
        // Html selectors
        // modal open and close Selector 
        const AddUserInformationModal =document.querySelector("#add-userInformation-modal")
        const addStuddentForm = document.querySelector("#add-student-form");
    
    
      // success toast
      const successToast = Toastify({
        text: "User was added successfully! Reloading the list...",
        duration: 1000,
      });
     
        function closeAddUserInformationModal() {
            AddUserInformationModal.style.display = "none";
        }
        function openAddUserInformationModal() {
            console.log("check connect")
            AddUserInformationModal.style.display = "block";
        }
    
        addStuddentForm.onsubmit =async function(event){
            event.preventDefault();
    
            // error show hide Selector
            const errorPlaceholders = document.querySelectorAll("p.error"); 
        //    clear errors first---------------------------->>   
                console.log("errorPlaceholders")
                console.log(errorPlaceholders) 
                for (let i = 0; i < errorPlaceholders.length; i++) {
                errorPlaceholders[i].style.display = "none";
                }
            // clear errors red border first---------------------------->>   
            const inputErrors = document.querySelectorAll("input.error");
                console.log("inputErrors")
                console.log(inputErrors)              
                if (inputErrors.length > 0) {
                for (let j = 0; j < inputErrors.length; j++) {
                    inputErrors[j].classList.remove("error");
                }
                }
    // //    send form data server and resived errors or success------------------------------------------>>
            // select the form which submit
           const formAddStudentData = new FormData(addStuddentForm);     
                const respons = await fetch("/Administrator/students", {
                method: "post",
                body: formAddStudentData,
                });
            let result =await respons.json()
    
          console.log("result")
          console.log(result.errors)
    
        // handle error and response
        if (result.errors) {
    
            console.log("working go")
            // console.log(fieldName)
            // mapping errors
            Object.keys(result.errors).forEach((fieldName) => {
    
            // add error class to all inputs
            addStuddentForm[fieldName].classList.add("error");
    
            // set all error placeholders (p tag) textContent
            const errorPlaceholder = document.querySelector(`.${fieldName}-add-error`);
            errorPlaceholder.innerHTML = result.errors[fieldName].msg;
            console.log("errorPlaceholderDown");
            console.log(errorPlaceholder);
            console.log("fieldName");
            console.log(fieldName);  
    
            // make all placeholders visible
            errorPlaceholder.style.display = "block";
          });
        } 
        else {
        // success
        successToast.showToast();
        //  Close modal
        closeAddStudentModal();
        // all errors hide
        document.querySelector("p.error").style.display = "none";
    
        // reload the page after 1 second
          setTimeout(() => {
            location.reload();
          }, 500);
        }
    
        }
    
    
      </script>