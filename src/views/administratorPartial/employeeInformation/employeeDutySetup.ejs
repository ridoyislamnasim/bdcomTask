
<%- include(`../commonPartial/header.ejs`); %>
<%- include(`../commonPartial/menu.ejs`); %>
<section class="home-section">
  <div class="home-content">
    <div class="manageAddRoom-container">
        <div id="title">
          <h2> Manage Invigilator Duty</h2>
        </div>
        <div class="table_top">
            <div class="left">
                <button class="newadd" onclick="asDegisnationFunction()">As Degisnation</button>
            </div>
            <div class="right">
                <div class="need">
                <span>Invigilator Need : </span>
                <span>
                  <%= emp_pro_info.totalInvigilatorNeed  %>
                </span>
                </div>
                <div class="assigend" >
                    <span>Invigilator assigend : </span>
                    <span>
                      <%= emp_pro_info.invigilatorAssigned  %>
                    </span>
                </div>

            </div>
        </div>
  
        <div class="table invilator_info" id="rooms-table">
          <table>
            <thead>
              <tr>
                <th>Employee</th>
                <th>Inital</th>
                <th>Designation</th>
                <th>Id</th>
                <th>Total Credit</th>
                <th>Duty</th>
              </tr>
            </thead>
            <tbody class="table_body">
              <% if (emp_pro_info) { %>
                <% for( let index = 0; index < emp_pro_info.length; index++ ) { %>
                  <tr id="row-<%= index %>" >
                    <td class="emp_img">
                      <div class="pro_img"  >
                        <img   src="<%= emp_pro_info[index].emp_ProfileImg ? emp_pro_info[index].emp_ProfileImg : '/uploads/user1.png'   %>" alt="Profile image">
                      </div>
                      
                      <!-- <span></span> -->
                    </td>
                    <td class="employeeInitial">
                      <span><%= emp_pro_info[index].employeeInitial  %></span>
                    </td>
                    <td class="emp_Designation">
                      <span><%= emp_pro_info[index].employeeDesignation  %></span>
                    </td>
                    <td class="emp_id">
                        <span><%= emp_pro_info[index].employeeId  %></span>
                      </td>
                    <td class="totall_credit">
                      <span><%= emp_pro_info[index].totall_credit  %></span>
                    </td>
                    <td class="duty">
                        <input class="duty table-tr-input-style-none" type="text" value="<%= emp_pro_info[index].duty  %>" onchange="dutyChangeHandel(this)">
                      <!-- <input class="idd" type="text" onchange="updateData(this)"> -->
                    </td>
                                     
                  </tr>          
                <% } %>          
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
  </div>
</section>    
<script>
  // Assuming you have included the Toastify library

// Function to show a toast message
function showToast(message, isError = false) {
  Toastify({
    text: message,
    duration: 500,
    // backgroundColor: isError ? "#f44336" : "#4caf50",
  }).showToast();
}

function asDegisnationFunction(){
  fetch('/Administrator/asDegisnation', {
    method: 'POST',
    // headers: {
    //   'Content-Type': 'application/json'
    // },
    // body: JSON.stringify(rowDutyData)
  })
    .then(response => response.json())
    .then(responseData => {
      // Handle the response from the server, if needed
      console.log('Response:', responseData);
      showToast(responseData.msg);
      setTimeout(() => {
        location.reload();
      }, 500);
    })
    .catch(error => {
      // Handle any errors that occurred during the data submission
      console.error('Error:', error);
    });
    

}
  
function dutyChangeHandel(duty) {
    // console.log(duty.value)
    // console.log(duty.classList[0])
    // const tds =input.closest('tr'); 
    // console.log( input.closest('tr'))
    // console.log( input.closest('tr').id)
    // console.log( input.closest('tr').tr)
  //   const rowIndex = input.closest('tr').id.split('-')[1];
  //   const value = input.value;
  //   console.log('Row:', rowIndex, 'Value:', value);

    const row = duty.closest('tr');
    console.log(row)
    const rowDutyData = {};
  if (row) {
    const tdElements = row.querySelectorAll('td');
    tdElements.forEach(td => {
      const span = td.querySelector('span');
      // console.log(span)
      const key = td.classList[0];
      // console.log(key)
      if (span) {
        const value = span.textContent;
        // console.log(value);
        // Do something with the value
        rowDutyData[key] = value;
      }
    });
    rowDutyData[duty.classList[0]] = duty.value;
    console.log(rowDutyData)
  }
  console.log(rowDutyData)
  if (rowDutyData) {
    // console.log("rowDutyData")
    // Send the updated data to the server
  fetch('/Administrator/duty', { 
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(rowDutyData)
  })
    .then(response => response.json())
    .then(responseData => {
      // Handle the response from the server, if needed
      console.log('Response:', responseData);
      showToast(responseData.msg);
      setTimeout(() => {
        location.reload();
      }, 500);
    })
    .catch(error => {
      // Handle any errors that occurred during the data submission
      console.error('Error:', error);
    });
    
  }

    // Perform operations with the updated value as needed
    // ...
  }



  
  //table data send server ------------------------

  // toggle-button active inactive------------active inactive start---------------------------
  function toggleButton(button) {
    var inputElement = button.previousElementSibling;
    var inputElementclose =button.closest('input');

    // var inputElement =document.querySelector('.toggle-button-input');
    console.log(button)
    console.log(inputElementclose)
  var isActive = button.classList.contains('on');

  if (isActive) {
    inputElement.value = '0';
  } else {
    inputElement.value = '1';
  }
  inputElement.dispatchEvent(new Event('change')); // Trigger onchange event

      button.classList.toggle('on');
      button.classList.toggle('off');

    }
  // toggle-button active inactive------------active inactive End---------------------------


  //dropdown valu set -----------------------------------
  
  // Get all the dropdown toggles, dropdown contents, and dropdown options
  const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
  const dropdownContents = document.querySelectorAll('.dropdown-content');

  // Loop through each dropdown toggle
  dropdownToggles.forEach(function (toggle, index) {
    const dropdownContent = dropdownContents[index];
    const options = dropdownContent.querySelectorAll('.dropdown-option');

    toggle.addEventListener('click', function () {
      dropdownContent.classList.remove('hide');
      dropdownContent.classList.toggle('show');
    });

    options.forEach(function (option) {
      option.addEventListener('click', function () {
        const currentOptions = this.parentNode.querySelectorAll('.dropdown-option');

        currentOptions.forEach(function (opt) {
          opt.classList.remove('active');
          opt.style.backgroundColor = '';
        });

        this.classList.add('active');
        this.style.backgroundColor = '#52d794';
        toggle.value = this.textContent;
        dropdownContent.classList.remove('show');
        toggle.dispatchEvent(new Event('change')); // Trigger onchange event
      });

      option.addEventListener('mouseenter', function () {
        if (!this.classList.contains('active')) {
          this.style.backgroundColor = '#01B3BD';
        }
      });

      option.addEventListener('mouseleave', function () {
        if (!this.classList.contains('active')) {
          this.style.backgroundColor = '';
        }
      });
    });
  });
  //dropdown valu set -------------end----------------------
  
  // arrow is ------------------------------------
//   function toggleDropdown(input) {
//     console.log("input",input)
//   const dropdownContent = input.nextElementSibling;
//   console.log("dropdownContent",dropdownContent)

//   const options = dropdownContent.querySelectorAll('.dropdown-option');
//   console.log("options",options)

//   const selectedIndex = Array.from(options).findIndex(option => option.textContent === input.value);
//   console.log("selectedIndex",selectedIndex)

//   dropdownContent.classList.toggle('hide');

//   // Add event listeners for up and down arrow keys
//   document.addEventListener('keydown', handleArrowKeys);
//   dropdownContent.classList.toggle('show');

//   // Set initial selected option
//   if (selectedIndex >= 0) {
//     options[selectedIndex].classList.add('active');
//   }

//   function handleArrowKeys(event) {
//     const key = event.key;
//     const activeOption = dropdownContent.querySelector('.dropdown-option.active');

//     if (key === 'ArrowUp') {
//       event.preventDefault();
//       if (activeOption) {
//         const previousOption = activeOption.previousElementSibling;
//         if (previousOption) {
//           activeOption.classList.remove('active');
//           previousOption.classList.add('active');
//         }
//       } else {
//         const lastOption = options[options.length - 1];
//         lastOption.classList.add('active');
//       }
//     } else if (key === 'ArrowDown') {
//       event.preventDefault();
//       if (activeOption) {
//         const nextOption = activeOption.nextElementSibling;
//         if (nextOption) {
//           activeOption.classList.remove('active');
//           nextOption.classList.add('active');
//         }
//       } else {
//         const firstOption = options[0];
//         firstOption.classList.add('active');
//       }
//     } else if (key === 'Enter' && activeOption) {
//       event.preventDefault();
//       input.value = activeOption.textContent;
//       dropdownContent.classList.remove('show');
//       input.dispatchEvent(new Event('change'));
//     }
//   }
// }

</script>

<!-- manu open close -->
<%- include(`../commonPartial/manuOpenCloseScript.ejs`); %>
</body>
</html>