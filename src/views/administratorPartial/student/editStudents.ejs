<div class="modal-wrapper" id="edit-student-modal">
    <div class="modal">
      <a href="#" onclick="closeEditStudentModal()" class="modal-close">+</a>
      <div class="modal-title">
        <h2>Edit Section </h2>
      </div>
      <div class="modal-body">
        <form id="edit-student-form">
          <input type="text" id="prvDepartmentSet" placeholder="Enter Department Name" name="department" />
          <p class="error department-edit-error"></p>
          <input type="text" id="prvBatchSet" placeholder="Enter Batch Name" name="batch" />
          <p class="error batch-edit-error"></p>
          <input type="text" id="prvSectionSet" placeholder="Enter Section Name" name="section" />
          <p class="error section-edit-error"></p>
          <input type="Number" id="prvNumberOfStudentSet" placeholder="Enter Totall Student In Section" name="numberOfStudent" />
          <p class="error numberOfStudent-edit-error"></p>
          <div class="radio">
            <span>Section status?</span> 
            <div>
            <input type="radio" id="editStudentActive" name="status"  value="Active"><span>Active</span> 
            <input type="radio" id="editStudentInactive" name="status" value="Inactive"><span>Inactive</span>
          </div>     
          <p id="editStudentId" style="display: none;">p</p>              
          </div>
          <input type="submit" value="Submit" />
        </form>
      </div>
    </div>
  </div>
</div>

     
<script> 
    const editStudentmodal = document.querySelector("#edit-student-modal");
    const editStudentForm = document.querySelector("#edit-student-form");

    // cuccess toast
   const editToast = Toastify({
            text: "User was Edit successfully!",
            duration: 5000,
        });
    function closeEditStudentModal() {
      editStudentmodal.style.display = "none";
    }

   const prvDepartmentSet=document.querySelector("#prvDepartmentSet")
   const prvBatchSet= document.querySelector("#prvBatchSet")
   const prvSectionSet =document.querySelector("#prvSectionSet")
   const prvNumberOfStudentSet =document.querySelector("#prvNumberOfStudentSet")

   const editStudentActive =document.querySelector("#editStudentActive")
   const editStudentInactive =document.querySelector("#editStudentInactive")
   const editStudentId =document.querySelector("#editStudentId")
    async function openStudentEditModal( prvDepartment,prvBatch,prvSection,prvNumberOfStudent,prvStudentSatus,Student_id) {
      prvDepartmentSet.value =prvDepartment;
      prvBatchSet.value =prvBatch;
      prvSectionSet.value =prvSection;
      prvNumberOfStudentSet.value =prvNumberOfStudent;

      // const StudentId=  document.querySelector("#editStudentId");  
      editStudentId.innerHTML =Student_id;
      if(prvStudentSatus == "Active"){
        editStudentActive.checked ="checked"
      }else{
        editStudentInactive.checked ="checked"
      }

      editStudentmodal.style.display = "block";
    }



    // -----------------------------edit and submit____________________________________>>
    editStudentForm.onsubmit =async function(event){
        event.preventDefault();

     // clear errors first---------------------------->>
     const errorPlaceholders = document.querySelectorAll("p.error");
        for (let i = 0; i < errorPlaceholders.length; i++) {
          errorPlaceholders[i].style.display = "none";
        }

    const inputErrors = document.querySelectorAll("input.error");
      if (inputErrors.length > 0) {
        for (let j = 0; j < inputErrors.length; j++) {
          inputErrors[j].classList.remove("error");
        }
      }
// // ------------------------------------------>>
// await function editsend(){
       const Studentis=  document.querySelector("#editStudentId").innerHTML;  
       console.log(Studentis)
       const formData = new FormData(editStudentForm); 
       console.log(formData)

        let response = await fetch(`/Administrator/students/${Studentis}`, {
        method: "post",
        body: formData,
        });
       let result =await response.json()
      console.log(result)
// }
         // handle error and response
    if (result.errors) {
      // errors
  console.log("working go")
  // console.log(fieldName)


      Object.keys(result.errors).forEach((fieldName) => {
        // add error class to all inputs
        editStudentForm[fieldName].classList.add("error");

        // set all error placeholders (p tag) textContent
        const errorPlaceholder = document.querySelector(`.${fieldName}-edit-error`);
        errorPlaceholder.innerHTML = result.errors[fieldName].msg;
        // make all placeholders visible
        errorPlaceholder.style.display = "block";
      });
    } else {
      // success
      editToast.showToast();
      closeEditStudentModal();
      document.querySelector("p.error").style.display = "none";

      // reload the page after 1 second
      setTimeout(() => {
        location.reload();
      }, 100);
    }}
  </script>