<script>

    
formExamschedule.onsubmit = async function (event) {
            event.preventDefault();
            // clear errors first---------------------------->>
            const errorPlaceholders = document.querySelectorAll("p.error");
            console.log("errorPlaceholders");
            console.log(errorPlaceholders);
            //    clear errors first---------------------------->>
            for (let i = 0; i < errorPlaceholders.length; i++) {
                  errorPlaceholders[i].style.display = "none";
            }

            const inputErrors = document.querySelectorAll("input.error");
            console.log("inputErrors");
            console.log(inputErrors);
            // clear errors red border first---------------------------->>
            if (inputErrors.length > 0) {
                  for (let j = 0; j < inputErrors.length; j++) {
                        inputErrors[j].classList.remove("error");
                  }
            }
            // // ------------------------------------------>>

            const formData = new FormData(formExamschedule);
            console.log("formData");
            console.log(formData);
            // send the request to server
            let response = await fetch(
                  "/Administrator/ExamSchedule/examschedule/submit",
                  {
                        method: "post",
                        body: formData,
                  }
            );
            let result = await response.json();
            console.log("resultr", result);
            // handle error and response
            if (result.errors) {
                  // errors
                  console.log("working go");
                  // console.log(fieldName)

                  Object.keys(result.errors).forEach((fieldName) => {
                        // add error class to all inputs
                        form[fieldName].classList.add("error");

                        // set all error placeholders (p tag) textContent
                        const errorPlaceholder = document.querySelector(
                              `.${fieldName}-error`
                        );

                        errorPlaceholder.innerHTML =
                              result.errors[fieldName].msg;

                        // make all placeholders visible
                        errorPlaceholder.style.display = "block";
                  });
            } else {
                  // success
                  successToast.showToast();
                  console.log("close");
                  // successToast.showToast();
                  closeTimeSlotModal();
                  // document.querySelector("p.error").style.display = "none";

                  // reload the page after 1 second
                  setTimeout(() => {
                        console.log("riody done!!!");
                        location.reload();
                  }, 500);
            }
      };


</script>